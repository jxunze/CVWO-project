{"ast":null,"code":"var _jsxFileName = \"/Users/xunze/Local Documents/Grind/Personal Projects/CVWO/proj2/final_forum/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport HomePage from './Pages/HomePage';\nimport CommentPage from './Pages/CommentPage';\nimport LoginPage from './Pages/LoginPage';\nimport SignupPage from './Pages/SignupPage';\n\n// import SignUp from './components/SignUp';\n// import SignIn from './components/SignIn';\n\n// function App(){\n//   const [userInfo, setInfo] = useState({\n//     user: {}, \n//     error: \"\",\n//   });\n\n//   useEffect(() => {\n//     console.log('hit');\n//     let token = localStorage.getItem('token');\n//     if(token){\n//       fetch('http://localhost:3000/profile', {\n//         method: \"GET\",\n//         headers: {\n//           \"Authorization\": `Bearer ${token}`\n//         }\n//       })\n//       .then(response => response.json())\n//       .then(result => {\n//         if(result.id){\n//           setInfo({\n//             ...userInfo, \n//             user: result\n//           })\n//         }\n//       })\n//     }\n//   }, []\n//   );\n\n//   const signUp = user => {\n//     fetch('http://localhost:3000/users', {\n//       method: \"POST\",\n//       headers: {\n//           \"Accept\": \"application/json\",\n//           \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         user:{\n//           username: user.username,\n//           password: user.password,\n//           first_name: user.firstName,\n//           last_name: user.lastName\n//         }\n//       })\n//     })\n//     .then(response => response.json())\n//     .then(user => setInfo({ ...userInfo, user: user }) )\n//   }\n\n//   const signIn = (user) => {\n//     fetch(\"http://localhost:3000/login\", {\n//         method: \"POST\",\n//         headers: {\n//             \"Accept\": \"application/json\",\n//             \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify({\n//             user: {\n//                 username: user.username,\n//                 password: user.password\n//             }\n//         })\n//     })\n//     .then(response => response.json())\n//     .then(result => {\n//         if (result.token){\n//         localStorage.setItem('token', result.token);\n//         setInfo({\n//             ...userInfo,\n//             user: result.user\n//             });\n//         }\n//         else {\n//             setInfo({\n//               ...userInfo,\n//               error: result.error\n//             });\n//         }\n//     })\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       {userInfo['user']['username'] ? <h2>Welcome {userInfo['user']['username']}</h2> : (\n//         <>\n//         <SignIn signIn={signIn} error={userInfo['error']} />\n//         <SignUp signUp={signUp} />\n//         </>)\n//       }\n//     </div>\n//   );\n// } \n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/home\",\n    element: /*#__PURE__*/React.createElement(HomePage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 38\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    element: /*#__PURE__*/React.createElement(LoginPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 39\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signup\",\n    element: /*#__PURE__*/React.createElement(SignupPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 40\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/post/:id\",\n    element: /*#__PURE__*/React.createElement(CommentPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 42\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","HomePage","CommentPage","LoginPage","SignupPage","App"],"sources":["/Users/xunze/Local Documents/Grind/Personal Projects/CVWO/proj2/final_forum/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route, \n  Link\n} from \"react-router-dom\";\nimport HomePage from './Pages/HomePage';\nimport CommentPage from './Pages/CommentPage';\nimport LoginPage from './Pages/LoginPage';\nimport SignupPage from './Pages/SignupPage';\n\n// import SignUp from './components/SignUp';\n// import SignIn from './components/SignIn';\n\n// function App(){\n//   const [userInfo, setInfo] = useState({\n//     user: {}, \n//     error: \"\",\n//   });\n\n//   useEffect(() => {\n//     console.log('hit');\n//     let token = localStorage.getItem('token');\n//     if(token){\n//       fetch('http://localhost:3000/profile', {\n//         method: \"GET\",\n//         headers: {\n//           \"Authorization\": `Bearer ${token}`\n//         }\n//       })\n//       .then(response => response.json())\n//       .then(result => {\n//         if(result.id){\n//           setInfo({\n//             ...userInfo, \n//             user: result\n//           })\n//         }\n//       })\n//     }\n//   }, []\n//   );\n\n//   const signUp = user => {\n//     fetch('http://localhost:3000/users', {\n//       method: \"POST\",\n//       headers: {\n//           \"Accept\": \"application/json\",\n//           \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         user:{\n//           username: user.username,\n//           password: user.password,\n//           first_name: user.firstName,\n//           last_name: user.lastName\n//         }\n//       })\n//     })\n//     .then(response => response.json())\n//     .then(user => setInfo({ ...userInfo, user: user }) )\n//   }\n\n//   const signIn = (user) => {\n//     fetch(\"http://localhost:3000/login\", {\n//         method: \"POST\",\n//         headers: {\n//             \"Accept\": \"application/json\",\n//             \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify({\n//             user: {\n//                 username: user.username,\n//                 password: user.password\n//             }\n//         })\n//     })\n//     .then(response => response.json())\n//     .then(result => {\n//         if (result.token){\n//         localStorage.setItem('token', result.token);\n//         setInfo({\n//             ...userInfo,\n//             user: result.user\n//             });\n//         }\n//         else {\n//             setInfo({\n//               ...userInfo,\n//               error: result.error\n//             });\n//         }\n//     })\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       {userInfo['user']['username'] ? <h2>Welcome {userInfo['user']['username']}</h2> : (\n//         <>\n//         <SignIn signIn={signIn} error={userInfo['error']} />\n//         <SignUp signUp={signUp} />\n//         </>)\n//       }\n//     </div>\n//   );\n// } \n\nfunction App(){\n  return (\n    <Router>\n      <Routes>\n        {/* <Route index element={<HomePage />} /> */}\n        <Route path=\"/home\" element={<HomePage />} />\n        <Route path=\"/login\" element={<LoginPage />} />\n        <Route path=\"/signup\" element={<SignupPage />} />\n        <Route path=\"/post/:id\" element={<CommentPage />} />\n        {/* <Route path=\"/comment\" element={<CommentPage />} />\n        <Route path=\"/*\" element={<HomePage />} /> */}\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,QACC,kBAAkB;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,UAAU,MAAM,oBAAoB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAG,GAAE;EACZ,oBACE,oBAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACL,oBAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEL,oBAAC,KAAK;IAAC,IAAI,EAAC,OAAO;IAAC,OAAO,eAAE,oBAAC,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAC7C,oBAAC,KAAK;IAAC,IAAI,EAAC,QAAQ;IAAC,OAAO,eAAE,oBAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAC/C,oBAAC,KAAK;IAAC,IAAI,EAAC,SAAS;IAAC,OAAO,eAAE,oBAAC,UAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACjD,oBAAC,KAAK;IAAC,IAAI,EAAC,WAAW;IAAC,OAAO,eAAE,oBAAC,WAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAG7C,CACF;AAEb;AAEA,eAAeA,GAAG"},"metadata":{},"sourceType":"module"}